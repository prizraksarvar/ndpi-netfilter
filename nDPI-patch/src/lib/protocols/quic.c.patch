--- /home/chrisn/src/ndpi-netfilter/nDPI//src/lib/protocols/quic.c	2022-06-30 09:34:28.882051275 -0400
+++ /home/chrisn/src/ndpi-netfilter/nDPI-patch//src/lib/protocols/quic.c	2022-07-01 13:38:30.514649728 -0400
@@ -17,19 +17,26 @@
  * If not, see <http://www.gnu.org/licenses/>.
  *
  */
-
+#ifndef __KERNEL__
 #if defined __FreeBSD__ || defined __NetBSD__ || defined __OpenBSD__
 #include <sys/endian.h>
 #endif
+#else
+#include "ndpi_define.h"
+#endif
 
 #include "ndpi_protocol_ids.h"
 #define NDPI_CURRENT_PROTO NDPI_PROTOCOL_QUIC
 #include "ndpi_api.h"
 
-#ifdef HAVE_LIBGCRYPT
+#if defined(HAVE_LIBGCRYPT) && !defined(__KERNEL__)
 #include <gcrypt.h>
 #endif
 
+#ifndef MIN
+#define MIN(X, Y) (((X) < (Y)) ? (X) : (Y))
+#endif
+
 // #define DEBUG_CRYPT
 // #define QUIC_DEBUG
 
@@ -121,13 +128,13 @@
 
   return 0;
 }
-#ifdef HAVE_LIBGCRYPT
+
 static int is_quic_ver_less_than(uint32_t version, uint8_t max_version)
 {
   uint8_t u8_ver = get_u8_quic_ver(version);
   return u8_ver && u8_ver <= max_version;
 }
-#endif
+
 static int is_quic_ver_greater_than(uint32_t version, uint8_t min_version)
 {
   return get_u8_quic_ver(version) >= min_version;
@@ -243,7 +250,7 @@
 }
 
 
-#ifdef HAVE_LIBGCRYPT
+#if defined(HAVE_LIBGCRYPT) && !defined(__KERNEL__)
 
 #ifdef DEBUG_CRYPT
 char *__gcry_err(gpg_error_t err, char *buf, size_t buflen)
@@ -1297,7 +1304,7 @@
 		   version, dest_conn_id_len);
       return NULL;
     }
-#ifdef HAVE_LIBGCRYPT
+#if defined(HAVE_LIBGCRYPT) && !defined(__KERNEL__)
     source_conn_id_len = packet->payload[6 + dest_conn_id_len];
     const u_int8_t *dest_conn_id = &packet->payload[6];
     clear_payload = decrypt_initial_packet(ndpi_struct, flow,
