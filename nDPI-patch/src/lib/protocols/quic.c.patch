--- /home/chrisn/src/3/ndpi-netfilter/nDPI//src/lib/protocols/quic.c	2021-07-19 13:47:49.172005951 +0000
+++ /home/chrisn/src/3/ndpi-netfilter/nDPI-patch//src/lib/protocols/quic.c	2021-07-19 16:17:34.992383430 +0000
@@ -17,19 +17,24 @@
  * If not, see <http://www.gnu.org/licenses/>.
  *
  */
-
+#ifndef __KERNEL__
 #if defined __FreeBSD__ || defined __NetBSD__ || defined __OpenBSD__
 #include <sys/endian.h>
 #endif
+#endif
 
 #include "ndpi_protocol_ids.h"
 #define NDPI_CURRENT_PROTO NDPI_PROTOCOL_QUIC
 #include "ndpi_api.h"
 
-#ifdef HAVE_LIBGCRYPT
+#if defined(HAVE_LIBGCRYPT) && !defined(__KERNEL__)
 #include <gcrypt.h>
 #endif
 
+#ifndef MIN
+#define MIN(X, Y) (((X) < (Y)) ? (X) : (Y))
+#endif
+
 // #define DEBUG_CRYPT
 // #define QUIC_DEBUG
 
@@ -92,7 +97,7 @@
     return (uint8_t)version;
   return 0;
 }
-#ifdef HAVE_LIBGCRYPT
+#if defined(HAVE_LIBGCRYPT) && !defined(__KERNEL__)
 static int is_quic_ver_less_than(uint32_t version, uint8_t max_version)
 {
   uint8_t u8_ver = get_u8_quic_ver(version);
@@ -198,7 +203,7 @@
 }
 
 
-#ifdef HAVE_LIBGCRYPT
+#if defined(HAVE_LIBGCRYPT) && !defined(__KERNEL__)
 
 #ifdef DEBUG_CRYPT
 char *__gcry_err(gpg_error_t err, char *buf, size_t buflen)
@@ -1036,7 +1041,7 @@
 		   version, source_conn_id_len);
       return NULL;
     }
-#ifdef HAVE_LIBGCRYPT
+#if defined(HAVE_LIBGCRYPT) && !defined(__KERNEL__)
     const u_int8_t *dest_conn_id = &packet->payload[6];
     clear_payload = decrypt_initial_packet(ndpi_struct, flow,
 					   dest_conn_id, dest_conn_id_len,
