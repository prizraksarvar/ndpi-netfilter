--- /home/chrisn/src/3/ndpi-netfilter/nDPI//src/lib/ndpi_analyze.c	2021-07-19 13:47:49.160005950 +0000
+++ /home/chrisn/src/3/ndpi-netfilter/nDPI-patch//src/lib/ndpi_analyze.c	2021-07-19 14:05:58.316051704 +0000
@@ -324,13 +324,13 @@
 void ndpi_free_bin(struct ndpi_bin *b) {
   switch(b->family) {
   case ndpi_bin_family8:
-    free(b->u.bins8);
+    ndpi_free(b->u.bins8);
     break;
   case ndpi_bin_family16:
-    free(b->u.bins16);
+    ndpi_free(b->u.bins16);
     break;
   case ndpi_bin_family32:
-    free(b->u.bins32);
+    ndpi_free(b->u.bins32);
     break;
   }
 }
@@ -347,7 +347,7 @@
   switch(out->family) {
   case ndpi_bin_family8:
     if((out->u.bins8 = (u_int8_t*)ndpi_calloc(out->num_bins, sizeof(u_int8_t))) == NULL) {
-      free(out);
+      ndpi_free(out);
       return(NULL);
     } else
       memcpy(out->u.bins8, b->u.bins8, out->num_bins*sizeof(u_int8_t));
@@ -355,7 +355,7 @@
 
   case ndpi_bin_family16:
     if((out->u.bins16 = (u_int16_t*)ndpi_calloc(out->num_bins, sizeof(u_int16_t))) == NULL) {
-      free(out);
+      ndpi_free(out);
       return(NULL);
     } else
       memcpy(out->u.bins16, b->u.bins16, out->num_bins*sizeof(u_int16_t));
@@ -363,7 +363,7 @@
 
   case ndpi_bin_family32:
     if((out->u.bins32 = (u_int32_t*)ndpi_calloc(out->num_bins, sizeof(u_int32_t))) == NULL) {
-      free(out);
+      ndpi_free(out);
       return(NULL);
     } else
       memcpy(out->u.bins32, b->u.bins32, out->num_bins*sizeof(u_int32_t));
